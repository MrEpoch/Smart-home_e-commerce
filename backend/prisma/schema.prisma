// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum role {
  admin
  user
}

model User {
  id              String           @id @default(uuid())
  firstName       String           @unique 
  lastName        String           @unique
  email           String           @unique
  password        String           @unique
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  role            role             @default(user)
  orders          Order[]

  @@unique([id, role])
}

model refresh_token {
    id              String           @id @default(uuid())
    token           String           @unique
    createdAt       DateTime         @default(now())
    belongsToId     String

    valid           Boolean          @default(true)
}

enum categories {
    locks
    lights
    cameras
    doorbells
    thermostats
    new
}

model Product {
    id                  String          @id @default(uuid())
    name                String
    description         String
    long_description    String
    price               String
    updatedAt           DateTime        @updatedAt

    stripeProductId     String
    image               String
    category            categories      @default(new)
    rating              Float           @default(0)
    numReviews          Int             @default(0)
    createdAt           DateTime        @default(now())
    orderItems          OrderItem[]
}

enum status {
    pending
    delivered
    cancelled
}

model OrderItem {
    id              String          @id @default(uuid())
    belongsToId     String
    createdAt       DateTime        @default(now())
    quantity        Int
    Product         Product[]
    Order           Order           @relation(fields: [belongsToId], references: [id])
}

model Order {
    id              String          @id @default(uuid())
    belongsToId     String?
    createdAt       DateTime        @default(now())
    updatedAt       DateTime        @updatedAt
    user            User?            @relation(fields: [belongsToId], references: [id])
    orderItems      OrderItem[]
    
    orderStatus     status          @default(pending)
    address         String
    country         String
    city            String
    postalCode      String
    phone           String
    email           String
}
